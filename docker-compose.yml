version: '3.8'

services:
  rag-agent:
    build: .
    container_name: chalee-rag-agent
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - CHROMA_HOST=chroma
      - CHROMA_PORT=8000
      - PORT=3000
    env_file:
      - .env
    volumes:
      - ./documents:/app/documents:ro
      - ./uploads:/app/uploads
      - ./logs:/app/logs
    depends_on:
      chroma:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
      
  chroma:
    image: chromadb/chroma:latest
    container_name: chalee-chromadb
    ports:
      - "8000:8000"
    volumes:
      - chroma_data:/chroma/chroma
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
    restart: unless-stopped
    networks:
      - rag-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/heartbeat"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

  # Optional: Nginx reverse proxy
  nginx:
    image: nginx:alpine
    container_name: chalee-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - rag-agent
    restart: unless-stopped
    networks:
      - rag-network
    profiles:
      - with-nginx

volumes:
  chroma_data:
    driver: local

networks:
  rag-network:
    driver: bridge